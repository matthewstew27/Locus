{"version":3,"sources":["md-dialog/dialog.ts"],"names":[],"mappings":"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","file":"md-dialog/dialog.js","sourcesContent":["import {\n  Component,\n  Output,\n  Input,\n  ContentChild,\n  EventEmitter,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  provide,\n  Directive,\n  ViewContainerRef,\n  TemplateRef,\n  NgModule\n} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\nimport {Overlay, OVERLAY_CONTAINER_TOKEN} from './overlay/overlay';\nimport {createOverlayContainer} from './overlay/overlay-container';\nimport {OverlayState} from './overlay/overlay-state';\nimport {OverlayRef} from './overlay/overlay-ref';\nimport {Animate} from './animate';\n\nimport {TemplatePortal} from './portal/portal';\n\n@Directive({ selector: '[mdDialogPortal]' })\nexport class MdDialogPortal extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n// TODO(jd): behavioral tests\n// TODO(jd): backdrop and clickToClose options\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <template mdDialogPortal>\n      <div class=\"md-dialog\" [class.open]=\"isOpened\">\n        <div class=\"md-dialog-container\">\n          <div class=\"md-dialog-header\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">&times;</button>\n            <h2 *ngIf=\"dialogTitle\" class=\"md-dialog-title\" id=\"myDialogLabel\" [innerHtml]=\"dialogTitle\"></h2>\n            <ng-content select=\"md-dialog-title\"></ng-content>\n          </div>\n          <div class=\"md-dialog-body\">\n            <ng-content></ng-content>\n          </div>\n          <ng-content select=\"md-dialog-footer\"></ng-content>\n        </div>\n      </div>\n    </template>\n  `,\n  styles: [`\n    .md-dialog-open { overflow-y: hidden; }\n    .md-dialog { position: fixed; top: 0; right: 0; bottom: 0; left: 0; z-index: 1050; background-color: rgba(33, 33, 33, 0.48); display: none; overflow-x: hidden; overflow-y: scroll; -webkit-overflow-scrolling: touch; outline: 0; }\n    .md-dialog.open { display: block; }\n    .md-dialog .md-dialog-container { position: relative; width: auto; margin: 15px; background-color: #fff; -webkit-background-clip: padding-box; -moz-background-clip: padding-box; background-clip: padding-box; border-radius: 4px; outline: 0; -webkit-box-shadow: 0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12); box-shadow: 0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12); -webkit-transition: .3s; -o-transition: .3s; -moz-transition: .3s; transition: .3s; -webkit-transform: scale(0.1); -ms-transform: scale(0.1); -o-transform: scale(0.1); -moz-transform: scale(0.1); transform: scale(0.1); }\n    .md-dialog.open .md-dialog-container { -webkit-transform: scale(1); -ms-transform: scale(1); -o-transform: scale(1); -moz-transform: scale(1); transform: scale(1); }\n    @media (min-width: 768px) {\n      .md-dialog .md-dialog-container { width: 600px; margin: 30px auto; }\n    }\n    .md-dialog-header { background: #2196f3; color: #fff; font-size: 25px; line-height: 1.1; font-weight: 500; padding: 0 16px; border-bottom: 1px solid #e5e5e5; }\n    .md-dialog-header .close { position: absolute; top: 21px; right: 16px; display: inline-block; width: 18px; height: 18px; overflow: hidden; -webkit-appearance: none; padding: 0; cursor: pointer; background: 0 0; border: 0; outline: 0; opacity: 0.8; font-size: 0; z-index: 1; }\n    .md-dialog-header .close::before,\n    .md-dialog-header .close::after { content: ''; position: absolute; top: 50%; left: 0; height: 2px; width: 100%; margin-top: -1px;background: #ccc;border-radius: 2px;height: 2px;}\n    .md-dialog-header .close::before {-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-ms-transform: rotate(45deg);-o-transform: rotate(45deg);transform: rotate(45deg);}\n    .md-dialog-header .close::after {-webkit-transform: rotate(-45deg);-moz-transform: rotate(-45deg);-ms-transform: rotate(-45deg);-o-transform: rotate(-45deg);transform: rotate(-45deg);}\n    .md-dialog-header .close:hover { opacity: 1; }\n    .md-dialog-header md-dialog-title, .md-dialog-header .md-dialog-title { margin: 0; font-size: 25px; line-height: 60px; font-weight: 500; }\n    .md-dialog-header dialog-header { line-height: 33px; }\n    .md-dialog-body { position: relative; padding: 16px; }\n    .md-dialog-footer, md-dialog-footer { display: block; padding: 16px; text-align: right; border-top: 1px solid rgba(0,0,0,0.12); }\n  `],\n  host: {\n    'tabindex': '0',\n    '(body:keydown)': 'onDocumentKeypress($event)'\n  }\n})\nexport class MdDialog implements OnDestroy {\n  constructor(private overlay: Overlay) {\n  }\n\n  @Output() onShow: EventEmitter<MdDialog> = new EventEmitter<MdDialog>();\n  @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onCancel: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The portal to send the dialog content through */\n  @ViewChild(MdDialogPortal) private portal: MdDialogPortal;\n\n  /** Is the dialog active? */\n  private isOpened: boolean = false;\n\n  @Input('title') dialogTitle: string;\n\n  /** Overlay configuration for positioning the dialog */\n  @Input() config = new OverlayState();\n\n  /** @internal */\n  private overlayRef: OverlayRef = null;\n\n  ngOnDestroy(): any {\n    return this.close();\n  }\n\n  /** Show the dialog */\n  show(): Promise<MdDialog> {\n    return this.close()\n      .then(() => this.overlay.create(this.config))\n      .then((ref: OverlayRef) => {\n        this.overlayRef = ref;\n        return ref.attach(this.portal);\n      })\n      .then(() => Animate.wait())\n      .then(() => {\n        this.isOpened = true;\n        this.onShow.emit(this);\n        return this;\n      });\n  }\n\n  /** Close the dialog */\n  close(result: any = true, cancel: boolean = false): Promise<MdDialog> {\n    if (!this.overlayRef) {\n      return Promise.resolve<MdDialog>(this);\n    }\n    this.isOpened = false;\n    // TODO(jd): this is terrible, use animate states\n    return Animate.wait(100)\n      .then(() => this.overlayRef.detach())\n      .then(() => {\n        this.overlayRef.dispose();\n        this.overlayRef = null;\n        if (cancel) {\n          this.onCancel.emit(result);\n        } else {\n          this.onClose.emit(result);\n        }\n        return this;\n      });\n  }\n\n  private onDocumentKeypress(event: KeyboardEvent) {\n    if (event.keyCode == 27) {\n      this.close();\n    }\n  }\n}\n\nexport const MD_DIALOG_DIRECTIVES: any[] = [MdDialog, MdDialogPortal];\r\n\r\nexport const MD_DIALOG_PROVIDERS: any[] = [Overlay, provide(OVERLAY_CONTAINER_TOKEN, { useValue: createOverlayContainer() })];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: MD_DIALOG_DIRECTIVES,\r\n  declarations: MD_DIALOG_DIRECTIVES,\r\n  providers: MD_DIALOG_PROVIDERS,\r\n})\r\nexport class MdDialogModule { }\r\n"],"sourceRoot":"/source/"}