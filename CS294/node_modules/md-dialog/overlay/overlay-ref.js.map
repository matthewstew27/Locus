{"version":3,"sources":["md-dialog/overlay/overlay-ref.ts"],"names":[],"mappings":";AAGA;;;GAGG;AACH;IACE,oBACU,WAAuB,EACvB,KAAkB,EAClB,MAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAY;QACvB,UAAK,GAAL,KAAK,CAAa;QAClB,WAAM,GAAN,MAAM,CAAc;IAAI,CAAC;IAEnC,2BAAM,GAAN,UAAO,MAAmB;QACxB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,2BAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IACnC,CAAC;IAED,4BAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IACH,iBAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,kBAAU,aAiBtB,CAAA","file":"md-dialog/overlay/overlay-ref.js","sourcesContent":["import {PortalHost, Portal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalHost {\n  constructor(\n    private _portalHost: PortalHost,\n    private _pane: HTMLElement,\n    private _state: OverlayState) { }\n\n  attach(portal: Portal<any>): Promise<any> {\n    return this._portalHost.attach(portal);\n  }\n\n  detach(): Promise<any> {\n    return this._portalHost.detach();\n  }\n\n  dispose(): void {\n    this._portalHost.dispose();\n  }\n}\n"],"sourceRoot":"/source/"}